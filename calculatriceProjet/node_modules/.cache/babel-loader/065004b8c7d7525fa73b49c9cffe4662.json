{"ast":null,"code":"var _jsxFileName = \"/Users/torea/Documents/GitHub/calculator9000/calculator9000/src/Components/AmazingNumberButton/AmazingNumberButton.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './AmazingNumberButton.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AmazingNumberButton() {\n  _s();\n\n  const [calc, setCalc] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const ops = ['+', '-', '*', '/', '.'];\n\n  const updateCalc = value => {\n    setCal;\n  };\n\n  const ajouterBoutons = () => {\n    const chiffres = [];\n\n    for (let i = 9; i > -1; i--) {\n      // Méthode JS pour envoyer le résultat de la boucle for dans chiffres\n      // key pour éviter d'avoir des conflits du aux id\n      chiffres.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonNumb\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: i\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this));\n    }\n\n    return chiffres;\n  };\n\n  const [stateInput, setStateInput] = useState(); // Récupère les entrées dans l'input\n\n  const linkedInput = chiffres => {\n    setStateInput(chiffres);\n    console.log(chiffres);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AmazingNumberButton\",\n    children: ajouterBoutons()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AmazingNumberButton, \"jpYg579tBkMiSgP0TtnjcRDMHzY=\");\n\n_c = AmazingNumberButton;\nexport default AmazingNumberButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AmazingNumberButton\");","map":{"version":3,"sources":["/Users/torea/Documents/GitHub/calculator9000/calculator9000/src/Components/AmazingNumberButton/AmazingNumberButton.js"],"names":["useState","AmazingNumberButton","calc","setCalc","result","setResult","ops","updateCalc","value","setCal","ajouterBoutons","chiffres","i","push","stateInput","setStateInput","linkedInput","console","log"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAO,2BAAP;;;AACA,SAASC,mBAAT,GAA+B;AAAA;;AAE7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACI,MAAD,EAAQC,SAAR,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMM,GAAG,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,CAAZ;;AAEA,QAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1BC,IAAAA,MAAM;AACP,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAE3B,UAAMC,QAAQ,GAAG,EAAjB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAAC,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAE3B;AACA;AACAD,MAAAA,QAAQ,CAACE,IAAT,eACE;AAAa,QAAA,SAAS,EAAC,YAAvB;AAAA,+BACA;AAAA,oBAAiBD;AAAjB,WAAaA,CAAb;AAAA;AAAA;AAAA;AAAA;AADA,SAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAED,WAAOD,QAAP;AAED,GAjBD;;AAmBA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,EAA5C,CA/B6B,CAiC7B;;AACA,QAAMgB,WAAW,GAAGL,QAAQ,IAAI;AAC5BI,IAAAA,aAAa,CAACJ,QAAD,CAAb;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH,GAHD;;AAOE,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,cACGD,cAAc;AADjB;AAAA;AAAA;AAAA;AAAA,UADF;AAKH;;GA9CQT,mB;;KAAAA,mB;AA+CT,eAAeA,mBAAf","sourcesContent":["import {useState} from 'react'\nimport './AmazingNumberButton.css'\nfunction AmazingNumberButton() {\n\n  const [calc, setCalc] = useState(\"\")\n\n  const [result,setResult ] = useState(\"\")\n\n  const ops = ['+','-','*','/','.']\n\n  const updateCalc = value => {\n    setCal\n  }\n\n  const ajouterBoutons = () => {\n\n    const chiffres = []\n\n    for (let i = 9; i > -1; i--) {\n\n      // Méthode JS pour envoyer le résultat de la boucle for dans chiffres\n      // key pour éviter d'avoir des conflits du aux id\n      chiffres.push(\n        <div key={i} className=\"buttonNumb\">\n        <button key={i}>{i}</button>\n        </div>\n      )\n    }\n\n    return chiffres;\n\n  }\n\n  const [stateInput, setStateInput] = useState()\n    \n  // Récupère les entrées dans l'input\n  const linkedInput = chiffres => {\n      setStateInput(chiffres);\n      console.log(chiffres);\n  }\n\n\n\n    return (\n      <div className=\"AmazingNumberButton\">\n        {ajouterBoutons()}\n      </div>\n    );\n}\nexport default AmazingNumberButton;\n"]},"metadata":{},"sourceType":"module"}